# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  display: 
    runs-on: ubuntu-latest

    steps:
      - name: Add DB_URL key to env
        run: echo "DB_URL=${{ secrets.DB_URL }}" > .env
      - name: Add DB_HOST key to env
        run: echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
      - name: Add DB_PORT key to env
        run: echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
      - name: Add DB_DATABASE key to env
        run: echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" > .env
      - name: Add DB_USERNAME key to env
        run: echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
      - name: Add DB_PASSWORD key to env
        run: echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
      - name: Add AI_API_KEY key to env
        run: echo "AI_API_KEY=${{ secrets.AI_API_KEY }}" > .env
      - name: Add FRONTEND_URL key to env
        run: echo "FRONTEND_URL=${{ secrets.FRONTEND_URL }}" >> .env
      - name: Add OPENAI_API_URL key to env
        run: echo "OPENAI_API_URL=${{ secrets.OPENAI_API_URL }}" >> .env
      - name: Display env file
        run: cat .env
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm install
    - run: npm run build --if-present
    - run: node dist/main.js
